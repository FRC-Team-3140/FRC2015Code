// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc0.MyRobot;

import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	public static SpeedController leftDriveMotor;
	public static SpeedController rightDriveMotor;
	public static SpeedController winchMotor;
	public static RobotDrive robotDrive;
	public static DoubleSolenoid grabberSolenoid;
	public static DoubleSolenoid shifterSolenoid;
	public static Compressor compressor;

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

	public static int leftDriveMotorPin = 0;
	public static int rightDriveMotorPin = 1;
	public static int winchMotorPin = 9;
	// solenoid pins
	public static int grabberSolenoidOpenPin = 4;
	public static int grabberSolenoidClosePin = 5;
	public static int shiftUpPin = 6;
	public static int shiftDownPin = 7;

	public static void init() {
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
		leftDriveMotor = new Talon(leftDriveMotorPin);
		LiveWindow.addActuator("driveTrain", "Left Motor",
				(Talon) leftDriveMotor);

		rightDriveMotor = new Talon(rightDriveMotorPin);
		LiveWindow.addActuator("driveTrain", "Right Motor",
				(Talon) rightDriveMotor);

		shifterSolenoid = new DoubleSolenoid(6, 7);
		LiveWindow.addActuator("driveTrain", "Gearbox Shifter",
				(DoubleSolenoid) shifterSolenoid);
		
		winchMotor = new Talon(winchMotorPin);
		LiveWindow.addActuator("chainLifter", "Elevator Motor",
				(Talon) winchMotor);

		robotDrive = new RobotDrive(leftDriveMotor, rightDriveMotor);

		robotDrive.setSafetyEnabled(true);
		robotDrive.setExpiration(0.1);
		robotDrive.setSensitivity(0.5);
		robotDrive.setMaxOutput(1.0);

		robotDrive.setInvertedMotor(RobotDrive.MotorType.kRearLeft, true);
		robotDrive.setInvertedMotor(RobotDrive.MotorType.kRearRight, false);

		grabberSolenoid = new DoubleSolenoid(4, 5);
		LiveWindow.addActuator("grabberArm", "Grabber Solenoid",
				(DoubleSolenoid) grabberSolenoid);

		compressor = new Compressor();
		LiveWindow.addActuator("grabberArm", "compressor",
				(Compressor) compressor);

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	}
}
